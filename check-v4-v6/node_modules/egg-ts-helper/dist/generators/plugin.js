"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = PluginGenerator;
const path_1 = __importDefault(require("path"));
const config_1 = require("../config");
const utils = __importStar(require("../utils"));
function PluginGenerator(config, baseConfig) {
    const getContent = (eggInfo) => {
        const dist = path_1.default.resolve(config.dtsDir, 'plugin.d.ts');
        if (!eggInfo.plugins) {
            return { dist };
        }
        const appPluginNameList = [];
        const importContent = [];
        const framework = config.framework || baseConfig.framework;
        Object.keys(eggInfo.plugins).forEach(name => {
            const pluginInfo = eggInfo.plugins[name];
            if (pluginInfo.package && pluginInfo.from) {
                appPluginNameList.push(name);
                if (pluginInfo.enable) {
                    let pluginPath = pluginInfo.package;
                    if (!pluginPath || config.usePath) {
                        pluginPath = pluginInfo.path.replace(/\\/g, '/');
                    }
                    importContent.push(`import '${pluginPath}';`);
                }
            }
        });
        if (!appPluginNameList.length) {
            return { dist };
        }
        const composeInterface = (list) => {
            return `    ${list
                .map(name => `${utils.isIdentifierName(name) ? name : `'${name}'`}?: EggPluginItem;`)
                .join('\n    ')}`;
        };
        return {
            dist,
            content: `${importContent.join('\n')}\n` +
                `import { EggPluginItem } from '${framework}';\n` +
                `declare module '${framework}' {\n` +
                `  interface ${config.interface} {\n` +
                `${composeInterface(Array.from(new Set(appPluginNameList)))}\n` +
                '  }\n' +
                '}',
        };
    };
    return utils.getEggInfo({
        cwd: baseConfig.cwd,
        customLoader: baseConfig.customLoader,
        cacheIndex: baseConfig.id,
        async: !!config.file,
        callback: getContent,
    });
}
PluginGenerator.isPrivate = true;
// only load plugin.ts|plugin.local.ts|plugin.default.ts
PluginGenerator.defaultConfig = {
    pattern: 'plugin*(.local|.default).+(ts|js)',
    interface: config_1.declMapping.plugin,
    /** use path insteadof package while import plugins */
    usePath: false,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dlbmVyYXRvcnMvcGx1Z2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0Esa0NBdURDO0FBNURELGdEQUF3QjtBQUN4QixzQ0FBd0M7QUFFeEMsZ0RBQWtDO0FBRWxDLFNBQXdCLGVBQWUsQ0FBQyxNQUFtQixFQUFFLFVBQTBCO0lBQ3JGLE1BQU0sVUFBVSxHQUFHLENBQUMsT0FBNEIsRUFBRSxFQUFFO1FBQ2xELE1BQU0sSUFBSSxHQUFHLGNBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3JCLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUNsQixDQUFDO1FBRUQsTUFBTSxpQkFBaUIsR0FBYSxFQUFFLENBQUM7UUFDdkMsTUFBTSxhQUFhLEdBQWEsRUFBRSxDQUFDO1FBQ25DLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQyxTQUFTLElBQUksVUFBVSxDQUFDLFNBQVMsQ0FBQztRQUMzRCxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDMUMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLE9BQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQyxJQUFJLFVBQVUsQ0FBQyxPQUFPLElBQUksVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUMxQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzdCLElBQUksVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO29CQUN0QixJQUFJLFVBQVUsR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO29CQUNwQyxJQUFJLENBQUMsVUFBVSxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQzt3QkFDbEMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFDbkQsQ0FBQztvQkFFRCxhQUFhLENBQUMsSUFBSSxDQUFDLFdBQVcsVUFBVSxJQUFJLENBQUMsQ0FBQztnQkFDaEQsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUM5QixPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDbEIsQ0FBQztRQUVELE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxJQUFjLEVBQUUsRUFBRTtZQUMxQyxPQUFPLE9BQU8sSUFBSTtpQkFDZixHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksR0FBRyxtQkFBbUIsQ0FBQztpQkFDcEYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDdEIsQ0FBQyxDQUFDO1FBRUYsT0FBTztZQUNMLElBQUk7WUFFSixPQUFPLEVBQUUsR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO2dCQUN0QyxrQ0FBa0MsU0FBUyxNQUFNO2dCQUNqRCxtQkFBbUIsU0FBUyxPQUFPO2dCQUNuQyxlQUFlLE1BQU0sQ0FBQyxTQUFTLE1BQU07Z0JBQ3JDLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsSUFBSTtnQkFDL0QsT0FBTztnQkFDUCxHQUFHO1NBQ04sQ0FBQztJQUNKLENBQUMsQ0FBQztJQUVGLE9BQU8sS0FBSyxDQUFDLFVBQVUsQ0FBQztRQUN0QixHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUc7UUFDbkIsWUFBWSxFQUFFLFVBQVUsQ0FBQyxZQUFZO1FBQ3JDLFVBQVUsRUFBRSxVQUFVLENBQUMsRUFBRTtRQUN6QixLQUFLLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJO1FBQ3BCLFFBQVEsRUFBRSxVQUFVO0tBQ3JCLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxlQUFlLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztBQUVqQyx3REFBd0Q7QUFDeEQsZUFBZSxDQUFDLGFBQWEsR0FBRztJQUM5QixPQUFPLEVBQUUsbUNBQW1DO0lBQzVDLFNBQVMsRUFBRSxvQkFBVyxDQUFDLE1BQU07SUFFN0Isc0RBQXNEO0lBQ3RELE9BQU8sRUFBRSxLQUFLO0NBQ2YsQ0FBQyJ9