"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Command = void 0;
const path_1 = __importDefault(require("path"));
const commander_1 = require("commander");
Object.defineProperty(exports, "Command", { enumerable: true, get: function () { return commander_1.Command; } });
const assert_1 = __importDefault(require("assert"));
const core_1 = __importStar(require("./core"));
const utils_1 = require("./utils");
class Commander {
    constructor(options) {
        this.commands = (0, utils_1.loadModules)(path_1.default.resolve(__dirname, './cmd'), true);
        this.tsHelperClazz = options?.tsHelperClazz || core_1.default;
        let version = options?.version;
        if (!version) {
            version = (0, utils_1.getPkgInfo)(path_1.default.dirname(__dirname)).version;
        }
        this.program = new commander_1.Command()
            .version(version, '-v, --version')
            .usage('[commands] [options]')
            .option('-w, --watch', 'Watching files, d.ts would recreated while file changed')
            .option('-c, --cwd [path]', 'Egg application base dir (default: process.cwd)')
            .option('-C, --config [path]', 'Configuration file, The argument can be a file path to a valid JSON/JS configuration file.ï¼ˆdefault: {cwd}/tshelper.js')
            .option('-f, --framework [name]', 'Egg framework(default: egg)')
            .option('-o, --oneForAll [path]', 'Create a d.ts import all types (default: typings/ets.d.ts)')
            .option('-s, --silent', 'Running without output')
            .option('-i, --ignore [dirs]', 'Ignore watchDirs, your can ignore multiple dirs with comma like: -i controller,service')
            .option('-e, --enabled [dirs]', 'Enable watchDirs, your can enable multiple dirs with comma like: -e proxy,other')
            .option('-E, --extra [json]', 'Extra config, the value should be json string');
    }
    init(argv) {
        const { program, commands } = this;
        let executeCmd;
        // override executeSubCommand to support async subcommand.
        program.addImplicitHelpCommand = () => { };
        program.executeSubCommand = async function (argv, args, unknown) {
            const cwd = this.cwd || core_1.defaultConfig.cwd;
            const command = commands[executeCmd];
            (0, assert_1.default)(command, executeCmd + ' does not exist');
            await command.run(this, { cwd, argv, args: args.filter(item => item !== this), unknown });
        };
        if (!argv.slice(2).length) {
            this.execute();
        }
        else {
            Object.keys(commands).forEach(cmd => {
                const subCommand = commands[cmd];
                const cmdName = subCommand.options ? `${cmd} ${subCommand.options}` : cmd;
                program.command(cmdName, subCommand.description)
                    .action(command => executeCmd = command);
            });
            program.parse(argv);
            if (!executeCmd) {
                this.execute();
            }
        }
    }
    execute() {
        const { program } = this;
        const watchFiles = program.watch;
        const generatorConfig = {};
        program.ignore && program.ignore.split(',').forEach(key => (generatorConfig[key] = false));
        program.enabled && program.enabled.split(',').forEach(key => (generatorConfig[key] = true));
        const tsHelperConfig = {
            cwd: program.cwd || core_1.defaultConfig.cwd,
            framework: program.framework,
            watch: watchFiles,
            generatorConfig,
            configFile: program.config,
            ...(program.extra ? JSON.parse(program.extra) : {}),
        };
        // silent
        if (program.silent) {
            tsHelperConfig.silent = true;
        }
        if ((0, utils_1.checkMaybeIsJsProj)(tsHelperConfig.cwd)) {
            // write jsconfig if the project is wrote by js
            (0, utils_1.writeJsConfig)(tsHelperConfig.cwd);
        }
        // create instance
        const clazz = this.tsHelperClazz;
        const tsHelper = new clazz(tsHelperConfig).build();
        if (program.oneForAll) {
            // create one for all
            tsHelper.createOneForAll(program.oneForAll);
        }
    }
}
exports.default = Commander;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGdEQUF3QjtBQUN4Qix5Q0FBb0M7QUF3RzNCLHdGQXhHQSxtQkFBTyxPQXdHQTtBQXZHaEIsb0RBQTRCO0FBQzVCLCtDQUFpRDtBQUNqRCxtQ0FBcUY7QUFPckYsTUFBcUIsU0FBUztJQUs1QixZQUFZLE9BQXVCO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBQSxtQkFBVyxFQUFhLGNBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hGLElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxFQUFFLGFBQWEsSUFBSSxjQUFRLENBQUM7UUFDeEQsSUFBSSxPQUFPLEdBQUcsT0FBTyxFQUFFLE9BQU8sQ0FBQztRQUMvQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDYixPQUFPLEdBQUcsSUFBQSxrQkFBVSxFQUFDLGNBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDeEQsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxtQkFBTyxFQUFFO2FBQ3pCLE9BQU8sQ0FBQyxPQUFRLEVBQUUsZUFBZSxDQUFDO2FBQ2xDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQzthQUM3QixNQUFNLENBQUMsYUFBYSxFQUFFLHlEQUF5RCxDQUFDO2FBQ2hGLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxpREFBaUQsQ0FBQzthQUM3RSxNQUFNLENBQUMscUJBQXFCLEVBQUUsdUhBQXVILENBQUM7YUFDdEosTUFBTSxDQUFDLHdCQUF3QixFQUFFLDZCQUE2QixDQUFDO2FBQy9ELE1BQU0sQ0FBQyx3QkFBd0IsRUFBRSw0REFBNEQsQ0FBQzthQUM5RixN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